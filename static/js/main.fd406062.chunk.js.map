{"version":3,"sources":["components/Layout/Header.js","components/Layout/Footer.js","components/Prayers/api.js","components/Lab/Traveltimes.js","components/Lab/Lab.js","components/Prayers/Prayer.js","components/Prayers/Prayers.js","components/Layout/Layout.js","components/Setup/Setup.js","utils/index.js","components/Error/ErrorBoundary.js","components/App/App.js","serviceWorker.js","index.js","assets/images/logo.png"],"names":["useStyles","makeStyles","grow","flexGrow","Header","_ref","name","timezone","startup","city","classes","_React$useState","React","useState","checkedA","_React$useState2","Object","slicedToArray","state","setState","react_default","a","createElement","className","AppBar","position","color","Toolbar","src","logo","width","height","alt","style","marginLeft","padding","lib_default","format","ticking","Switch","checked","onChange","event","keys","localStorage","map","key","startsWith","removeItem","country","region","finished","objectSpread","defineProperty","target","value","Slide","direction","in","mountOnEnter","unmountOnExit","Typography","variant","fontStyle","theme","text","spacing","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","appBar","top","bottom","fabButton","zIndex","left","right","margin","Footer","props","display","gutterBottom","paddingTop","usePrayer","_ref$country","_ref$city","date","API","concat","_useState","_useState2","data","setData","_fetchPrayerTimes","asyncToGenerator","regenerator_default","mark","_callee","res","_data","wrap","_context","prev","next","fetch","headers","Accept","sent","json","meta","setItem","JSON","stringify","t0","error","message","abrupt","stop","apply","this","arguments","useEffect","getItem","parse","fetchPrayerTimes","useLab_1","_ref2","lat","lon","_useState3","_useState4","_fetchTravelPrayerTimes","_callee2","_data2","_context2","fetchTravelPrayerTimes","Traveltimes","_useLab_","_useLab_2","timings","Maghrib","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Fragment","isGeolocationAvailable","isGeolocationEnabled","coords","latitude","longitude","altitude","heading","speed","Lab_Traveltimes","marginTop","card","minWidth","bullet","transform","title","fontSize","pos","buttonaction","justifyContent","Prayer","_props$pdata","pdata","alpha","setAlpha","handleAlpha","components_Lab_Lab","prayer","index","Card","CardContent","component","readable","onClick","hijri","month","ar","weekday","en","progress","green","secondary","Prayers","prdata","prayerdata","code","status","console","log","dt","Date","day","getDate","slice","mon","getMonth","yr","getFullYear","length","Grow","Prayers_Prayer","CircularProgress","lightBlue","Layout","pdate","_usePrayer","_usePrayer2","Layout_Header","components_Prayers_Prayers","Layout_Footer","root","button","marginRight","actionsContainer","resetContainer","label","selfont","textField","h1","fontWeight","Setup","setupdata","activeStep","place","seccountry","secregion","steps","handleNext","handleBack","newState","align","Stepper","orientation","Step","StepLabel","StepContent","rcrs_es","val","maxWidth","borderRadius","TextField","id","match","step","getStepContent","Button","disabled","Paper","square","elevation","getPDdata","dte","year","ErrorBoundary","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","eventId","errorInfo","_this2","Sentry","scope","setExtras","_this3","children","Component","createMuiTheme","primary","main","typography","App","pdtodaysDate","split","join","handlefinished","obj","filter","ThemeProvider","CssBaseline","Error_ErrorBoundary","build_default","location","buttonStyle","Setup_Setup","stepperData","locationstate","components_Layout_Layout","resetstate","Boolean","window","hostname","dsn","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.fd406062.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Clock from 'react-live-clock';\r\nimport logo from '../../assets/images/logo.png';\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n// });\r\n\r\n\r\nconst useStyles = makeStyles({\r\n      grow: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    \r\n\r\n\r\nconst Header = ({timezone, startup, city}) => {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        checkedA: true\r\n      });\r\n    \r\n      const handleChange = name => event => {\r\n        setState(() => {\r\n          Object.keys(localStorage).map(key => {\r\n            if (key.startsWith('padachone:')) {\r\n                localStorage.removeItem(key);\r\n            }\r\n            return;\r\n        });\r\n        startup({country: '' , region: '' , finished : false});\r\n        return { ...state, [name]: event.target.checked }\r\n      });\r\n      };\r\n    return (\r\n        <div className={{flexGrow: 1}}>\r\n        <AppBar position=\"fixed\" color=\"primary\">\r\n            <Toolbar>\r\n            <img src={logo} width=\"150\" height=\"30\" alt=\"logo\" className=\"App-logo\" style={{marginLeft:'-38px'}}/>\r\n          <div className={classes.grow} />\r\n           \r\n            <span style={{color:'#fff', padding: '0 0 0 3px'}}><Clock format={'HH:mm:ss'} ticking={true} timezone={timezone} /></span>\r\n            <Switch checked={state.checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" color=\"secondary\"/>\r\n            </Toolbar>\r\n            <Slide direction=\"up\" in=\"true\" mountOnEnter unmountOnExit>  \r\n              <Typography variant=\"caption\" color=\"textSecondary\" style={{color: 'white', fontStyle:'italic'}}>\r\n                <strong>{city}</strong>\r\n              </Typography>\r\n            </Slide>\r\n        </AppBar>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//       display: \"flex\"\r\n//     },\r\n//   });\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n}));\r\n\r\nconst Footer = (props) => {\r\n    const classes = useStyles();\r\n    // const [value, setValue] = React.useState('recents');\r\n    // function handleChange(event, newValue) {\r\n    //     setValue(newValue);\r\n    //   }\r\n\r\n    \r\n    return (\r\n        // <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n        //     {/* <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} /> */}\r\n        //     <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n        //     <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n        //     {/* <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<Icon>...</Icon>} /> */}\r\n        // </BottomNavigation>\r\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        {/* <Toolbar> */}\r\n        {/* <Typography variant=\"h6\" color=\"inherit\" style={{color: 'white', display:'flex', justifyContent: 'center'}}>\r\n                A  L  L  A  H\r\n            </Typography> */}\r\n           \r\n          {/* <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Open drawer\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          {/* <Fab color=\"secondary\" aria-label=\"Add\" className={classes.fabButton}>\r\n            <AddIcon />\r\n          </Fab> */}\r\n          <div className={classes.grow} />\r\n          {/* <Typography variant=\"h6\" color=\"inherit\" style={{color: 'white', display:'flex', justifyContent: 'center', marginRight:'10px'}}>\r\n                P  A  D  A  C  H  O  N  E\r\n          </Typography> */}\r\n          \r\n          {/* <IconButton color=\"inherit\">\r\n            <SearchIcon />\r\n          </IconButton> */}\r\n          {/* <IconButton edge=\"end\" color=\"inherit\">\r\n            <MoreIcon />\r\n          </IconButton> */}\r\n        {/* </Toolbar> */}\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"secondary\" style={{paddingTop:'10px'}}>\r\n            Copyright © 2019 WISMIM.\r\n          </Typography>\r\n      </AppBar>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nexport const usePrayer = ({country='Netherlands', city='Amsterdam', date}) => {\r\n    debugger;\r\n    const API = `https://api.aladhan.com/v1/timingsByCity?city=${city}&country=${country}&method=8`;\r\n    const [data, setData] = useState({})\r\n    async function fetchPrayerTimes() {\r\n        try {\r\n            const res = await fetch(API, {\r\n                headers : {\r\n                    Accept : 'application/json'\r\n                }\r\n            });\r\n            const data = await res.json();\r\n            Object.keys(localStorage).map(key => {\r\n                if (key.startsWith('padachone:')) {\r\n                    localStorage.removeItem(key);\r\n                }\r\n                return;\r\n            })\r\n            \r\n            if (data && data.data && data.data.meta) {\r\n                localStorage.setItem(`padachone:city`, city);\r\n                localStorage.setItem(`padachone:country`, country);\r\n                localStorage.setItem(`padachone:${date}`, JSON.stringify(data))\r\n            }\r\n            setData(data);\r\n        }\r\n        catch(e) {\r\n            //\r\n            setData({error: e.message});\r\n            return false\r\n        }   \r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(`padachone:${date}`)) {\r\n            setData(JSON.parse(localStorage.getItem(`padachone:${date}`)))           \r\n        }\r\n        else {\r\n            fetchPrayerTimes();\r\n        }\r\n    }, [])\r\n    return [data, setData]\r\n}\r\n\r\n\r\nexport const useLab_1 = ({lat, lon}) => {\r\n    debugger;\r\n    const API = `https://api.aladhan.com/v1/calendar?latitude=${lat}&longitude=${lon}&method=2&month=5&year=2019`;\r\n    const [data, setData] = useState({})\r\n    async function fetchTravelPrayerTimes() {\r\n        try {\r\n            const res = await fetch(API, {\r\n                headers : {\r\n                    Accept : 'application/json'\r\n                }\r\n            });\r\n            const data = await res.json();         \r\n            \r\n           \r\n            setData(data);\r\n        }\r\n        catch(e) {\r\n            //\r\n            setData({error: e.message});\r\n            return false\r\n        }   \r\n    }\r\n    useEffect(() => {\r\n       \r\n            fetchTravelPrayerTimes();\r\n    }, [])\r\n    return [data, setData]\r\n}\r\n","import React from 'react';\r\nimport {useLab_1} from '../Prayers/api';\r\n\r\nconst Traveltimes = ({lat, lon}) => {\r\n    const [data, setData] = useLab_1({lat: lat, lon: lon});\r\n    if (data && data.data) {\r\n        debugger;\r\n        return (\r\n            <div>{data.data[0].timings.Maghrib}</div>\r\n        //     {\r\n        //     data.data.map(item => {\r\n        //         return (\r\n        //             <h4>{item.timings}</h4>\r\n        //         )\r\n        //     })\r\n        // }\r\n            \r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <h5>Loading...</h5>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Traveltimes;","import React, { useState } from 'react';\r\nimport {geolocated} from 'react-geolocated';\r\n\r\nimport Traveltimes from './Traveltimes'\r\n\r\n\r\nconst Lab = (props) => {\r\n    const [state, setState] = useState({});\r\n    const { country, region } = state;\r\n    \r\n    \r\n    return (\r\n        <>\r\n        {/* <h1>Welcome Alfie</h1>\r\n          <CountryDropdown\r\n          value={country}\r\n          onChange={(val) => selectCountry(val)} />\r\n        <RegionDropdown\r\n          country={country}\r\n          value={region}\r\n          onChange={(val) => selectRegion(val)} /> */}\r\n\r\n        {!props.isGeolocationAvailable\r\n            ?<div>Your browser does not support Geolocation</div>\r\n            :!props.isGeolocationEnabled\r\n                ?<div style={{marginTop:'150px'}}><h5 >Message from Lab : \"Geolocation is not enabled. Please enable location. Please refresh to go back\"</h5></div>\r\n                :props.coords\r\n                    ? <div><table>\r\n                    <tbody>\r\n                        <tr><td>latitude</td><td>{props.coords.latitude}</td></tr>\r\n                        <tr><td>longitude</td><td>{props.coords.longitude}</td></tr>\r\n                        <tr><td>altitude</td><td>{props.coords.altitude}</td></tr>\r\n                        <tr><td>heading</td><td>{props.coords.heading}</td></tr>\r\n                        <tr><td>speed</td><td>{props.coords.speed}</td></tr>\r\n                    </tbody>\r\n                    </table>\r\n                    <Traveltimes lat={props.coords.latitude} lon={props.coords.longitude} />\r\n                    </div>\r\n                    : <div>Getting the location data&hellip; </div>\r\n                }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default geolocated({\r\n    positionOptions: {\r\n      enableHighAccuracy: false,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n  })(Lab);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport { EventEmitter } from 'events';\r\nimport Lab from '../Lab/Lab';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },    \r\n    buttonaction: {\r\n        justifyContent: 'center'\r\n    }\r\n  });\r\n\r\nconst Prayer = (props) => {\r\n    const { pdata:{timings, date, meta} } = props;\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [alpha, setAlpha] = React.useState(false);\r\n\r\n    const handleAlpha = () =>{\r\n      setAlpha(true)\r\n    }\r\n\r\n    \r\n    if (timings) {\r\n        if (!alpha) {\r\n            return (\r\n                Object.keys(timings).map((prayer, index) => {\r\n                    return (\r\n                        <Card className={classes.card} key={index}>\r\n                            <CardContent>\r\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                {prayer}\r\n                                </Typography>\r\n                                <Typography variant=\"h3\" component=\"h2\">\r\n                                {timings[prayer]}\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                {date.readable} ( {meta.timezone} \r\n                                <span onClick={handleAlpha}>)</span>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                {date.hijri.month.ar}\r\n                                <br />\r\n                                {`\"${date.hijri.weekday.en}\"`}\r\n                                </Typography>\r\n                            </CardContent>\r\n                            {/* <CardActions className={classes.buttonaction}>\r\n                                <Button size=\"small\">Learn More</Button>\r\n                            </CardActions> */}\r\n                        </Card> \r\n                    )\r\n                })\r\n\r\n                \r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Lab />\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Prayer;","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport green from '@material-ui/core/colors/green';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport {usePrayer} from './api';\r\nimport Prayer from './Prayer';\r\nimport './prayers.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2),\r\n      color: green[500]\r\n    },\r\n    secondary: {\r\n        color:'#4caf50'\r\n    }\r\n  }));\r\n\r\nconst Prayers = (props) => {\r\n    // const [data, setData] = usePrayer('Amsterdam');\r\n    const {prdata: data} = props;\r\n    const {data:prayerdata, code, status} = data;\r\n    console.log(data)\r\n    const classes = useStyles();\r\n    // \r\n    const monthList = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    let dt = new Date();\r\n    let day = ('0'+dt.getDate()).slice(-2);\r\n    let mon = monthList[dt.getMonth()];\r\n    let yr = dt.getFullYear();\r\n    console.log(`${day} ${mon} ${yr}`)\r\n    // \r\n    useEffect(() => {\r\n        if (prayerdata && Object.keys(prayerdata).length) {\r\n            //localStorage.setItem()\r\n            //throw new Error('Uncaught');\r\n        }\r\n        \r\n    })\r\n    \r\n    return (\r\n        <div className=\"pdnContainer\">\r\n        {(typeof data === \"object\" && code === 200 && Object.keys(prayerdata).length)\r\n            ?<>\r\n               <Grow in=\"true\">\r\n                    <div>\r\n                    <Prayer pdata={prayerdata}/>\r\n                    \r\n                    </div>\r\n               </Grow>                           \r\n            </>\r\n            :<CircularProgress className={classes.progress} color=\"secondary\" />\r\n        }        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Prayers;","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Prayers from '../Prayers';\r\nimport {usePrayer} from '../Prayers/api';\r\nimport Sound from 'react-sound';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2),\r\n      color: lightBlue[500]\r\n    },\r\n    secondary: {\r\n        color:'#4caf50'\r\n    }\r\n  }));\r\n\r\nconst Layout = ({country=localStorage.getItem('padachone:country'), city=localStorage.getItem('padachone:city'), pdate, startup}) => {\r\n    const [data, setData] = usePrayer({city: city, country: country, date : pdate});\r\n    const {timezone} = (data && data.data && data.data.meta)?data.data.meta:'Europe/AmsterDAM';\r\n    const classes = useStyles();\r\n    if (data && data.data && data.data.meta && data.code === 200) {\r\n        return (\r\n            <>\r\n                <Header timezone={timezone} startup={startup} city={localStorage.getItem(`padachone:city`)}/>\r\n               <Prayers prdata={data}/>    \r\n               \r\n                <Footer />\r\n            </>        \r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n            <h5>{data.data || data.error}</h5> \r\n            {(data.data || data.error)\r\n                ?<p>Please refresh to start over!</p>\r\n                :<CircularProgress className={classes.progress} color=\"secondary\" />\r\n            }\r\n           </>       \r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  label: {\r\n    color: 'red',\r\n    fontSize: '2rem'\r\n  },\r\n  selfont: {\r\n    // fontSize:'25px'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  h1: {\r\n    fontWeight:'bold'\r\n  }\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Where on earth are you ?', 'Almost there!', 'Need More Accuracy?', 'Are you a traveller? - Coming Soon!'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `This will Set up your timezone preferance to appear on top of the screen`;\r\n    case 1:\r\n      return 'You can always re-configure these settings on click of a button appearing next to timezone display';\r\n    case 2:\r\n      return 'Key in your Place name for more accurate results.'\r\n    case 3:\r\n      return `Wanna know your Ifthar/Prayer time while moving ? Coming Soon!`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nfunction Setup(props) {\r\n  const {setupdata} = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({activeStep : 0, place: ''})\r\n  const {activeStep, country, region, seccountry, secregion, place } = state;\r\n  // const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setState({...state, activeStep : state.activeStep + 1});\r\n  }\r\n\r\n  function handleBack() {\r\n    setState({...state, activeStep : state.activeStep - 1});\r\n  }\r\n\r\n  function handleReset() {\r\n    setState({...state, activeStep : 0});\r\n  }\r\n\r\n  const selectCountry = (country) => {\r\n    setState({...state, country})\r\n  }\r\n  const selectRegion = (region) => {\r\n      setState({...state, region})\r\n  }\r\n\r\n  const selectsecCountry = (seccountry) => {\r\n    setState({...state, country})\r\n  }\r\n \r\n\r\n  useEffect(() => {\r\n    if (activeStep === steps.length) {\r\n      let newState;\r\n      if (place) {\r\n        newState = {...state, region: place, finished : true};\r\n      }\r\n      else {\r\n        newState = {...state, finished : true};\r\n      }\r\n      setState(() => {        \r\n        props.finished(newState);\r\n        return newState;\r\n      })\r\n      \r\n    }\r\n  })\r\n\r\n  const handleChange = name => event => {\r\n    let val = event.target.value;\r\n    if (val.match(/^[a-z A-Z]*$/)) {\r\n      setState({ ...state, place: val });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Typography color=\"textPrimary\" variant=\"h1\" component=\"h1\" align=\"left\" style={{fontWeight:'bold', fontSize:'5rem', padding:'24px'}} gutterBottom>\r\n                Know Your Prayer times\r\n    </Typography>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label} style={{color: \"white\"}}>\r\n            <StepLabel classes={classes.label} align=\"left\"><span style={{fontSize:'1.5rem'}}>{label}</span></StepLabel>\r\n            <StepContent align=\"left\">\r\n              \r\n              {(activeStep === 0) && <CountryDropdown\r\n              value={country}\r\n              onChange={(val) => selectCountry(val)} className={classes.selfont} style={{maxWidth: '100%', fontSize: '1rem', borderRadius: '5px', marginBottom:'10px'}}/>}\r\n\r\n              {(activeStep === 1) && <RegionDropdown\r\n              country={country}\r\n              value={region}\r\n              onChange={(val) => selectRegion(val)} className={classes.selfont} style={{maxWidth: '100%', fontSize: '1rem', borderRadius: '5px', marginBottom:'10px'}}/>}\r\n            \r\n            {(activeStep === 2) && <TextField\r\n              id=\"place-name\"\r\n              label=\"Place\"\r\n              className={classes.textField}\r\n              value={place}\r\n              onChange={handleChange('place-name')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />}\r\n                \r\n              <Typography color=\"textSecondary\" variant=\"body2\" component=\"p\" style={{fontStyle:'italic', fontSize: '1rem'}} gutterBottom>{getStepContent(index)}</Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                    style={{color: \"white\"}}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Finish' : (activeStep === 2 && !place) ? 'Skip' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setup;","export const getPDdata = () => {\r\n    const months =  [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\r\n    \"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\r\n\r\n    const dte = new Date();\r\n    const day = ('0'+dte.getDate()).slice(-2);\r\n    const month = months[dte.getMonth()];\r\n    const year = dte.getFullYear();\r\n\r\n    return `${day} ${month} ${year}`\r\n\r\n    \r\n}","import React, {Component} from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\n// Sentry.init({\r\n//  dsn: \"https://bc34e53e67594e09803e8dbbe9e4df5b@sentry.io/1457299\"\r\n// });\r\n// should have been called before using it here\r\n// ideally before even rendering your react app\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, eventId: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      this.setState({ error });\r\n      Sentry.withScope(scope => {\r\n          scope.setExtras(errorInfo);\r\n          const eventId = Sentry.captureException(error);\r\n          this.setState({eventId})\r\n      });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            //render fallback UI\r\n            return (\r\n                <>\r\n              <a onClick={() => Sentry.showReportDialog({ eventId: this.state.eventId })}>Report feedback</a>\r\n              <p>We're sorry — something's gone wrong.</p>\r\n              <p>Our team has been notified, but click here fill out a report.</p>\r\n              </>\r\n            );\r\n        } else {\r\n            //when there's not an error, render children untouched\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport 'typeface-roboto';\r\nimport Layout from '../Layout';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport Location from '../Location/Location'\r\nimport Setup from '../Setup/Setup';\r\nimport stepperData from '../Setup/setup-stepper-data.json';\r\nimport {getPDdata} from '../../utils';\r\nimport ErrorBoundary from '../Error/ErrorBoundary';\r\nimport CookieConsent from \"react-cookie-consent\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: lightBlue,\r\n    secondary : {\r\n      main: '#fff',\r\n    },\r\n    text: {\r\n      // primary: \"#000000\",\r\n      // secondary: \"#ffffff\"\r\n    } \r\n  },\r\n  typography: {\r\n    // color: '#fff'\r\n  }\r\n});\r\nfunction App() {  \r\n  const [state, setState] = useState({finished : false, pdtodaysDate: getPDdata().split(' ').join('')});\r\n  const {finished, country, city, pdtodaysDate, prayerdata} = state;\r\n  const handlefinished = (obj) => {\r\n    const {country, region, finished} = obj;\r\n    \r\n    setState({...state, finished, country, city: region});\r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const padachon_lsfind = Object.keys(localStorage).filter(key => key.startsWith('padachone:'));\r\n    if (padachon_lsfind.length) {\r\n      setState({...state, finished : true})\r\n    }\r\n  }, [])\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <CssBaseline />\r\n        <ErrorBoundary>\r\n          <CookieConsent location=\"bottom\" style={{ background: \"#4caf50\",marginBottom:'30px' }} buttonStyle={{borderRadius: '10px'}}>\r\n            This website uses cookies to enhance the user experience.\r\n        </CookieConsent>\r\n          {!finished && <Setup setupdata={stepperData} finished={(locationstate) => handlefinished(locationstate)}/>}\r\n          {finished && <Layout country={country} city={city} pdate={pdtodaysDate} startup={(resetstate) => handlefinished(resetstate)}/>}\r\n        </ErrorBoundary> \r\n      </div>\r\n    </ThemeProvider>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\nSentry.init({\r\n dsn: \"https://bc34e53e67594e09803e8dbbe9e4df5b@sentry.io/1457299\"\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.a299d8fa.png\";"],"sourceRoot":""}