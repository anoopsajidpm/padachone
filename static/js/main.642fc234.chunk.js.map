{"version":3,"sources":["components/Layout/Header.js","components/Layout/Footer.js","components/Prayers/api.js","components/Prayers/Prayer.js","components/Prayers/Prayers.js","components/Layout/Layout.js","components/Setup/Setup.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","_ref","timezone","react_default","a","createElement","className","flexGrow","AppBar","position","color","Toolbar","Typography","variant","style","useStyles","makeStyles","root","display","Footer","props","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","value","setValue","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","Favorite_default","LocationOn_default","usePrayer","country","city","API","concat","_useState","_useState2","data","setData","_fetchPrayerTimes","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","headers","Accept","sent","json","stop","apply","this","arguments","useEffect","fetchPrayerTimes","card","minWidth","bullet","margin","transform","title","fontSize","pos","marginBottom","buttonaction","justifyContent","Prayer","_props$pdata","pdata","timings","date","keys","map","prayer","index","Card","key","CardContent","gutterBottom","component","readable","hijri","month","ar","weekday","en","theme","progress","spacing","green","secondary","Prayers","prdata","prayerdata","code","status","console","log","dt","Date","day","getDate","slice","mon","getMonth","yr","getFullYear","length","Fragment","Grow","in","Prayers_Prayer","CircularProgress","Layout","_usePrayer","_usePrayer2","meta","Layout_Header","components_Prayers_Prayers","Layout_Footer","width","button","marginTop","marginRight","actionsContainer","resetContainer","padding","Setup","setupdata","activeStep","state","setState","region","steps","seccountry","secregion","handleNext","objectSpread","handleBack","finished","Stepper","orientation","Step","StepLabel","StepContent","rcrs_es","val","step","getStepContent","Button","disabled","onClick","Paper","square","elevation","createMuiTheme","palette","primary","text","typography","App","localStorage","getItem","ThemeProvider","CssBaseline","Setup_Setup","stepperData","locationstate","obj","handlefinished","components_Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.642fc234.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n// });\r\n\r\n\r\n\r\n\r\n\r\nconst Header = ({timezone}) => {\r\n    //const classes = useStyles();\r\n\r\n    return (\r\n        <div className={{flexGrow: 1}}>\r\n        <AppBar position=\"fixed\" color=\"primary\">\r\n            <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={{color: 'white'}}>\r\n                {timezone}\r\n            </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n  });\r\n\r\nconst Footer = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('recents');\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue);\r\n      }\r\n    return (\r\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n            {/* <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} /> */}\r\n            <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n            <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n            {/* <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<Icon>...</Icon>} /> */}\r\n        </BottomNavigation>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nexport const usePrayer = ({country, city}) => {\r\n    debugger;\r\n    const API = `https://api.aladhan.com/v1/timingsByCity?city=${city}&country=${country}&method=8`;\r\n    const [data, setData] = useState({})\r\n    async function fetchPrayerTimes() {\r\n        const res = await fetch(API, {\r\n            headers : {\r\n                Accept : 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n        setData(data);\r\n    }\r\n    useEffect(() => {\r\n        fetchPrayerTimes();\r\n    }, [])\r\n    return [data, setData]\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { EventEmitter } from 'events';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },    \r\n    buttonaction: {\r\n        justifyContent: 'center'\r\n    }\r\n  });\r\n\r\nconst Prayer = (props) => {\r\n    const { pdata:{timings, date} } = props;\r\n    const classes = useStyles();\r\n\r\n    \r\n\r\n    \r\n    if (timings) {\r\n        return (\r\n            Object.keys(timings).map((prayer, index) => {\r\n                return (\r\n                    <Card className={classes.card} key={index}>\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            {prayer}\r\n                            </Typography>\r\n                            <Typography variant=\"h3\" component=\"h2\">\r\n                            {timings[prayer]}\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                            {date.readable}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                            {date.hijri.month.ar}\r\n                            <br />\r\n                            {`\"${date.hijri.weekday.en}\"`}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        {/* <CardActions className={classes.buttonaction}>\r\n                            <Button size=\"small\">Learn More</Button>\r\n                        </CardActions> */}\r\n                    </Card> \r\n                )\r\n            })\r\n\r\n            \r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Prayer;","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport green from '@material-ui/core/colors/green';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport {usePrayer} from './api';\r\nimport Prayer from './Prayer';\r\nimport './prayers.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2),\r\n      color: green[500]\r\n    },\r\n    secondary: {\r\n        color:'#4caf50'\r\n    }\r\n  }));\r\n\r\nconst Prayers = (props) => {\r\n    // const [data, setData] = usePrayer('Amsterdam');\r\n    const {prdata: data} = props;\r\n    const {data:prayerdata, code, status} = data;\r\n    console.log(data)\r\n    const classes = useStyles();\r\n    // \r\n    const monthList = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    let dt = new Date();\r\n    let day = ('0'+dt.getDate()).slice(-2);\r\n    let mon = monthList[dt.getMonth()];\r\n    let yr = dt.getFullYear();\r\n    console.log(`${day} ${mon} ${yr}`)\r\n    // \r\n    useEffect(() => {\r\n        if (prayerdata && Object.keys(prayerdata).length) {\r\n            //localStorage.setItem()\r\n        }\r\n        \r\n    })\r\n    \r\n    return (\r\n        <div className=\"pdnContainer\">\r\n        {(typeof data === \"object\" && code === 200 && Object.keys(prayerdata).length)\r\n            ?<>\r\n               <Grow in=\"true\">\r\n                    <Prayer pdata={prayerdata}/>\r\n               </Grow>                           \r\n            </>\r\n            :<CircularProgress className={classes.progress} color=\"secondary\" />\r\n        }        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Prayers;","import React from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Prayers from '../Prayers';\r\nimport {usePrayer} from '../Prayers/api';\r\n\r\nconst Layout = ({country, city}) => {\r\n    const [data, setData] = usePrayer({city: city, country: country});\r\n    console.log('AB', data);\r\n    const {timezone} = (data && data.data)?data.data.meta:'Europe/AmsterDAM'\r\n    return (\r\n        <>\r\n            <Header timezone={timezone}/>\r\n                <Prayers prdata={data}/>\r\n            <Footer />\r\n        </>        \r\n    )\r\n}\r\n\r\nexport default Layout;","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Padchone !', 'Almost there!', 'Setup your Secondary Preferance'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `Please Select your Country`;\r\n    case 1:\r\n      return 'Choose your Region';\r\n    case 2:\r\n      return `Setting up a secondary preferance would always come handy whenever you want to make a \r\n              comparison between your second home and main`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nfunction Setup(props) {\r\n  const {setupdata} = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({activeStep : 0})\r\n  const {activeStep, country, region, seccountry, secregion } = state;\r\n  // const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setState({...state, activeStep : state.activeStep + 1});\r\n  }\r\n\r\n  function handleBack() {\r\n    setState({...state, activeStep : state.activeStep - 1});\r\n  }\r\n\r\n  function handleReset() {\r\n    setState({...state, activeStep : 0});\r\n  }\r\n\r\n  const selectCountry = (country) => {\r\n    setState({...state, country})\r\n  }\r\n  const selectRegion = (region) => {\r\n      setState({...state, region})\r\n  }\r\n\r\n  const selectsecCountry = (seccountry) => {\r\n    setState({...state, country})\r\n  }\r\n  const selectsecRegion = (secregion) => {\r\n      setState({...state, secregion})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeStep === 3) {\r\n      props.finished(state);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label} style={{color: \"white\"}}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              {(activeStep === 0) && <CountryDropdown\r\n              value={country}\r\n              onChange={(val) => selectCountry(val)} />}\r\n\r\n            {(activeStep === 1) && <RegionDropdown\r\n            country={country}\r\n            value={region}\r\n            onChange={(val) => selectRegion(val)} />}\r\n\r\n            \r\n              <Typography color=\"textSecondary\" variant=\"body2\" component=\"p\">{getStepContent(index)}</Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                    style={{color: \"white\"}}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setup;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport 'typeface-roboto';\r\nimport Layout from '../Layout';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport Location from '../Location/Location'\r\nimport Setup from '../Setup/Setup';\r\nimport stepperData from '../Setup/setup-stepper-data.json';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    text: {\r\n      // primary: \"#000000\",\r\n      // secondary: \"#ffffff\"\r\n    } \r\n  },\r\n  typography: {\r\n    // color: '#fff'\r\n  }\r\n});\r\nfunction App() {  \r\n  const [state, setState] = useState({finished : false});\r\n  const {finished, country, city} = state;\r\n  \r\n  const handlefinished = (obj) => {\r\n    const {country, region} = obj;\r\n    \r\n    setState({...state, finished: true, country, city: region});\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('padachone')) {\r\n      setState({...state, finished : true, country: 'Netherlands', city: 'Amsterdam'})\r\n    }\r\n  }, [])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <CssBaseline />\r\n        {!finished && <Setup setupdata={stepperData} finished={(locationstate) => handlefinished(locationstate)}/>}\r\n        {finished && <Layout country={country} city={city}/>} \r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}