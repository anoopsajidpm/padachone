{"version":3,"sources":["components/Layout/Header.js","components/Layout/Footer.js","components/Prayers/api.js","components/Prayers/Prayer.js","components/Prayers/Prayers.js","components/Layout/Layout.js","components/Setup/Setup.js","utils/index.js","components/Error/ErrorBoundary.js","components/App/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","grow","flexGrow","Header","_ref","name","timezone","startup","classes","_React$useState","React","useState","checkedA","_React$useState2","Object","slicedToArray","state","setState","react_default","a","createElement","className","AppBar","position","color","Toolbar","Typography","variant","style","display","justifyContent","marginRight","Switch","checked","onChange","event","localStorage","clear","country","region","finished","objectSpread","defineProperty","target","value","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","appBar","top","bottom","fabButton","zIndex","left","right","margin","Footer","props","gutterBottom","paddingTop","usePrayer","_ref$country","_ref$city","city","date","API","concat","_useState","_useState2","data","setData","_fetchPrayerTimes","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","headers","Accept","sent","json","setItem","JSON","stringify","stop","apply","this","arguments","useEffect","getItem","parse","fetchPrayerTimes","card","minWidth","bullet","transform","title","fontSize","pos","buttonaction","Prayer","_props$pdata","pdata","timings","keys","map","prayer","index","Card","key","CardContent","component","readable","hijri","month","ar","weekday","en","progress","green","secondary","Prayers","prdata","prayerdata","code","status","console","log","dt","Date","day","getDate","slice","mon","getMonth","yr","getFullYear","length","Fragment","Grow","in","Prayers_Prayer","CircularProgress","Layout","pdate","_usePrayer","_usePrayer2","meta","Layout_Header","components_Prayers_Prayers","Layout_Footer","root","width","button","marginTop","actionsContainer","resetContainer","label","selfont","Setup","setupdata","activeStep","secregion","seccountry","steps","handleNext","handleBack","newState","Stepper","orientation","Step","StepLabel","StepContent","rcrs_es","val","step","getStepContent","Button","disabled","onClick","Paper","square","elevation","getPDdata","dte","year","ErrorBoundary","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","error","eventId","errorInfo","_this2","Sentry","scope","setExtras","_this3","children","Component","createMuiTheme","primary","main","typography","App","pdtodaysDate","split","join","handlefinished","obj","ThemeProvider","CssBaseline","Error_ErrorBoundary","Setup_Setup","stepperData","locationstate","components_Layout_Layout","resetstate","Boolean","window","location","hostname","match","dsn","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a5b3711.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//   },\r\n// });\r\n\r\n\r\nconst useStyles = makeStyles({\r\n      grow: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    \r\n\r\n\r\nconst Header = ({timezone, startup}) => {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        checkedA: true\r\n      });\r\n    \r\n      const handleChange = name => event => {\r\n        setState(() => {localStorage.clear();startup({country: '' , region: '' , finished : false});return { ...state, [name]: event.target.checked }});\r\n      };\r\n    return (\r\n        <div className={{flexGrow: 1}}>\r\n        <AppBar position=\"fixed\" color=\"primary\">\r\n            <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={{color: 'white', display:'flex', justifyContent: 'center', marginRight:'10px'}}>\r\n                P  A  D  A  C  H  O  N  E\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n            <Typography variant=\"h7\" color=\"inherit\" style={{color: 'white'}}>\r\n                {timezone}\r\n            </Typography>\r\n            <Switch checked={state.checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" color=\"secondary\"/>\r\n            </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//       display: \"flex\"\r\n//     },\r\n//   });\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n}));\r\n\r\nconst Footer = (props) => {\r\n    const classes = useStyles();\r\n    // const [value, setValue] = React.useState('recents');\r\n    // function handleChange(event, newValue) {\r\n    //     setValue(newValue);\r\n    //   }\r\n    return (\r\n        // <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n        //     {/* <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} /> */}\r\n        //     <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n        //     <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n        //     {/* <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<Icon>...</Icon>} /> */}\r\n        // </BottomNavigation>\r\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        {/* <Toolbar> */}\r\n        {/* <Typography variant=\"h6\" color=\"inherit\" style={{color: 'white', display:'flex', justifyContent: 'center'}}>\r\n                A  L  L  A  H\r\n            </Typography> */}\r\n           \r\n          {/* <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Open drawer\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          {/* <Fab color=\"secondary\" aria-label=\"Add\" className={classes.fabButton}>\r\n            <AddIcon />\r\n          </Fab> */}\r\n          <div className={classes.grow} />\r\n          {/* <Typography variant=\"h6\" color=\"inherit\" style={{color: 'white', display:'flex', justifyContent: 'center', marginRight:'10px'}}>\r\n                P  A  D  A  C  H  O  N  E\r\n          </Typography> */}\r\n          \r\n          {/* <IconButton color=\"inherit\">\r\n            <SearchIcon />\r\n          </IconButton> */}\r\n          {/* <IconButton edge=\"end\" color=\"inherit\">\r\n            <MoreIcon />\r\n          </IconButton> */}\r\n        {/* </Toolbar> */}\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"secondary\" style={{paddingTop:'10px'}}>\r\n            Copyright © 2019 WISMIM.\r\n          </Typography>\r\n      </AppBar>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nexport const usePrayer = ({country='Netherlands', city='Amsterdam', date}) => {\r\n    debugger;\r\n    const API = `https://api.aladhan.com/v1/timingsByCity?city=${city}&country=${country}&method=8`;\r\n    const [data, setData] = useState({})\r\n    async function fetchPrayerTimes() {\r\n        const res = await fetch(API, {\r\n            headers : {\r\n                Accept : 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n        localStorage.clear();\r\n        localStorage.setItem(`padachone:${date}`, JSON.stringify(data))\r\n        setData(data);\r\n    }\r\n    useEffect(() => {\r\n        if (localStorage.getItem(`padachone:${date}`)) {\r\n            setData(JSON.parse(localStorage.getItem(`padachone:${date}`)))\r\n        }\r\n        else {\r\n            fetchPrayerTimes();\r\n        }\r\n    }, [])\r\n    return [data, setData]\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { EventEmitter } from 'events';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },    \r\n    buttonaction: {\r\n        justifyContent: 'center'\r\n    }\r\n  });\r\n\r\nconst Prayer = (props) => {\r\n    const { pdata:{timings, date} } = props;\r\n    const classes = useStyles();\r\n\r\n    \r\n\r\n    \r\n    if (timings) {\r\n        return (\r\n            Object.keys(timings).map((prayer, index) => {\r\n                return (\r\n                    <Card className={classes.card} key={index}>\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            {prayer}\r\n                            </Typography>\r\n                            <Typography variant=\"h3\" component=\"h2\">\r\n                            {timings[prayer]}\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                            {date.readable}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                            {date.hijri.month.ar}\r\n                            <br />\r\n                            {`\"${date.hijri.weekday.en}\"`}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        {/* <CardActions className={classes.buttonaction}>\r\n                            <Button size=\"small\">Learn More</Button>\r\n                        </CardActions> */}\r\n                    </Card> \r\n                )\r\n            })\r\n\r\n            \r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Prayer;","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport green from '@material-ui/core/colors/green';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport {usePrayer} from './api';\r\nimport Prayer from './Prayer';\r\nimport './prayers.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2),\r\n      color: green[500]\r\n    },\r\n    secondary: {\r\n        color:'#4caf50'\r\n    }\r\n  }));\r\n\r\nconst Prayers = (props) => {\r\n    // const [data, setData] = usePrayer('Amsterdam');\r\n    const {prdata: data} = props;\r\n    const {data:prayerdata, code, status} = data;\r\n    console.log(data)\r\n    const classes = useStyles();\r\n    // \r\n    const monthList = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    let dt = new Date();\r\n    let day = ('0'+dt.getDate()).slice(-2);\r\n    let mon = monthList[dt.getMonth()];\r\n    let yr = dt.getFullYear();\r\n    console.log(`${day} ${mon} ${yr}`)\r\n    // \r\n    useEffect(() => {\r\n        if (prayerdata && Object.keys(prayerdata).length) {\r\n            //localStorage.setItem()\r\n            //throw new Error('Uncaught');\r\n        }\r\n        \r\n    })\r\n    \r\n    return (\r\n        <div className=\"pdnContainer\">\r\n        {(typeof data === \"object\" && code === 200 && Object.keys(prayerdata).length)\r\n            ?<>\r\n               <Grow in=\"true\">\r\n                    <div>\r\n                    <Prayer pdata={prayerdata}/>\r\n                    \r\n                    </div>\r\n               </Grow>                           \r\n            </>\r\n            :<CircularProgress className={classes.progress} color=\"secondary\" />\r\n        }        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Prayers;","import React, { useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Prayers from '../Prayers';\r\nimport {usePrayer} from '../Prayers/api';\r\nimport Sound from 'react-sound';\r\n\r\nconst Layout = ({country, city, pdate, startup}) => {\r\n    const [data, setData] = usePrayer({city: city, country: country, date : pdate});\r\n    const {timezone} = (data && data.data)?data.data.meta:'Europe/AmsterDAM'\r\n   \r\n    return (\r\n        <>\r\n            <Header timezone={timezone} startup={startup}/>\r\n                <Prayers prdata={data}/>                \r\n            <Footer />\r\n        </>        \r\n    )\r\n}\r\n\r\nexport default Layout;","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  label: {\r\n    color: 'red'\r\n  },\r\n  selfont: {\r\n    // fontSize:'25px'\r\n  }\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['P A D A C H O N E !  \"Worries end when Salah begins!\"', 'Almost there!', 'Setup your Secondary Preferance - Coming Soon!'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `This will Set up your timezone preferance to appear on top of the screen`;\r\n    case 1:\r\n      return 'You can always re-configure these settings on click of a button appearing next to timezone display';\r\n    case 2:\r\n      return `Do you think Setting up a secondary preferance would always come handy whenever you want to make a \r\n              comparison between your second home and main?`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nfunction Setup(props) {\r\n  const {setupdata} = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({activeStep : 0})\r\n  const {activeStep, country, region, seccountry, secregion } = state;\r\n  // const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  function handleNext() {\r\n    setState({...state, activeStep : state.activeStep + 1});\r\n  }\r\n\r\n  function handleBack() {\r\n    setState({...state, activeStep : state.activeStep - 1});\r\n  }\r\n\r\n  function handleReset() {\r\n    setState({...state, activeStep : 0});\r\n  }\r\n\r\n  const selectCountry = (country) => {\r\n    setState({...state, country})\r\n  }\r\n  const selectRegion = (region) => {\r\n      setState({...state, region})\r\n  }\r\n\r\n  const selectsecCountry = (seccountry) => {\r\n    setState({...state, country})\r\n  }\r\n  const selectsecRegion = (secregion) => {\r\n      setState({...state, secregion})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeStep === 3) {\r\n      setState(() => {\r\n        let newState = {...state, secregion, finished : true};\r\n        props.finished(newState);\r\n        return newState;\r\n      })\r\n      \r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label} style={{color: \"white\"}}>\r\n            <StepLabel classes={classes.label}>{label}</StepLabel>\r\n            <StepContent>\r\n\r\n              {(activeStep === 0) && <CountryDropdown\r\n              value={country}\r\n              onChange={(val) => selectCountry(val)} className={classes.selfont}/>}\r\n\r\n              {(activeStep === 1) && <RegionDropdown\r\n              country={country}\r\n              value={region}\r\n              onChange={(val) => selectRegion(val)} className={classes.selfont}/>}\r\n            \r\n              <Typography color=\"textSecondary\" variant=\"body2\" component=\"p\">{getStepContent(index)}</Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                    style={{color: \"white\"}}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setup;","export const getPDdata = () => {\r\n    const months =  [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\r\n    \"August\",\"September\",\"October\",\"November\",\"December\"];\r\n\r\n    const dte = new Date();\r\n    const day = ('0'+dte.getDate()).slice(-2);\r\n    const month = months[dte.getMonth()];\r\n    const year = dte.getFullYear();\r\n\r\n    return `${day} ${month} ${year}`\r\n\r\n    \r\n}","import React, {Component} from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\n// Sentry.init({\r\n//  dsn: \"https://bc34e53e67594e09803e8dbbe9e4df5b@sentry.io/1457299\"\r\n// });\r\n// should have been called before using it here\r\n// ideally before even rendering your react app\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, eventId: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n      this.setState({ error });\r\n      Sentry.withScope(scope => {\r\n          scope.setExtras(errorInfo);\r\n          const eventId = Sentry.captureException(error);\r\n          this.setState({eventId})\r\n      });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            //render fallback UI\r\n            return (\r\n                <>\r\n              <a onClick={() => Sentry.showReportDialog({ eventId: this.state.eventId })}>Report feedback</a>\r\n              <p>We're sorry — something's gone wrong.</p>\r\n              <p>Our team has been notified, but click here fill out a report.</p>\r\n              </>\r\n            );\r\n        } else {\r\n            //when there's not an error, render children untouched\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport 'typeface-roboto';\r\nimport Layout from '../Layout';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport Location from '../Location/Location'\r\nimport Setup from '../Setup/Setup';\r\nimport stepperData from '../Setup/setup-stepper-data.json';\r\nimport {getPDdata} from '../../utils';\r\nimport ErrorBoundary from '../Error/ErrorBoundary';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    secondary : {\r\n      main: '#fff',\r\n    },\r\n    text: {\r\n      // primary: \"#000000\",\r\n      // secondary: \"#ffffff\"\r\n    } \r\n  },\r\n  typography: {\r\n    // color: '#fff'\r\n  }\r\n});\r\nfunction App() {  \r\n  const [state, setState] = useState({finished : false, pdtodaysDate: getPDdata().split(' ').join('')});\r\n  const {finished, country, city, pdtodaysDate, prayerdata} = state;\r\n  const handlefinished = (obj) => {\r\n    const {country, region, finished} = obj;\r\n    \r\n    setState({...state, finished, country, city: region});\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (localStorage.getItem(`padachone:${pdtodaysDate}`)) {\r\n      setState({...state, finished : true})\r\n    }\r\n  }, [])\r\n  return (\r\n    \r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <CssBaseline />\r\n        <ErrorBoundary>\r\n          {!finished && <Setup setupdata={stepperData} finished={(locationstate) => handlefinished(locationstate)}/>}\r\n          {finished && <Layout country={country} city={city} pdate={pdtodaysDate} startup={(resetstate) => handlefinished(resetstate)}/>}\r\n        </ErrorBoundary> \r\n      </div>\r\n    </ThemeProvider>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\nSentry.init({\r\n dsn: \"https://bc34e53e67594e09803e8dbbe9e4df5b@sentry.io/1457299\"\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}